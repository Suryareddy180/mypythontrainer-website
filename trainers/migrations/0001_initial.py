# Generated by Django 5.1.7 on 2025-04-28 04:17

import django.core.validators
import django.db.models.deletion
import trainers.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Award',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_title', models.CharField(max_length=255, verbose_name='Full Title')),
                ('short_title', models.CharField(max_length=100, verbose_name='Short Title')),
                ('certificate', models.ImageField(upload_to='award_certificates/', verbose_name='Certificate Image')),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive')], default='Active', max_length=8, verbose_name='Status')),
            ],
        ),
        migrations.CreateModel(
            name='College',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=255, verbose_name='Full Name')),
                ('short_name', models.CharField(max_length=50, verbose_name='Short Name')),
                ('city', models.CharField(max_length=100, verbose_name='City')),
                ('country', models.CharField(max_length=100, verbose_name='Country')),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], default='active', max_length=10, verbose_name='Status')),
            ],
        ),
        migrations.CreateModel(
            name='Degree',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('short_name', models.CharField(max_length=100)),
                ('certificate', models.FileField(upload_to='certificates/')),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_year', models.PositiveIntegerField(verbose_name='From Year')),
                ('to_year', models.PositiveIntegerField(help_text='Enter 0 if currently working', verbose_name='To Year')),
                ('full_name', models.CharField(max_length=255, verbose_name='Full Name')),
                ('short_name', models.CharField(max_length=100, verbose_name='Short Name')),
                ('logo', models.ImageField(upload_to='organization_logos/', verbose_name='Organization Logo')),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive')], default='Active', max_length=8, verbose_name='Status')),
            ],
        ),
        migrations.CreateModel(
            name='Qualification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive')], default='Active', max_length=8)),
                ('college', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trainers.college')),
                ('degree', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trainers.degree')),
            ],
        ),
        migrations.CreateModel(
            name='Trainer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Full Name')),
                ('title', models.CharField(blank=True, max_length=100, null=True, verbose_name='Professional Title / Specialization')),
                ('bio', models.TextField(default='This is a placeholder bio.', help_text='Provide a detailed biography.', verbose_name='Trainer Bio')),
                ('dob', models.DateField(blank=True, null=True, verbose_name='Date of Birth')),
                ('training_exp', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(50)], verbose_name='Training Experience (Years)')),
                ('prior_batches', models.PositiveIntegerField(default=0, verbose_name='Prior Batches')),
                ('prior_aspirants', models.PositiveIntegerField(default=0, verbose_name='Prior Aspirants')),
                ('prior_weekly_tests', models.PositiveIntegerField(default=0, verbose_name='Prior Weekly Tests')),
                ('rating', models.DecimalField(decimal_places=1, max_digits=3, validators=[django.core.validators.MinValueValidator(1.0), django.core.validators.MaxValueValidator(5.0)], verbose_name='Rating (1-5)')),
                ('email', models.EmailField(help_text='Official communication email (Gmail only).', max_length=60, validators=[trainers.models.validate_gmail])),
                ('country_code', models.CharField(choices=[('+91', 'India (+91)')], default='+91', max_length=3)),
                ('phone_number', models.CharField(help_text='Used for WhatsApp communication.', max_length=10, validators=[django.core.validators.RegexValidator('^\\d{10}$', 'Mobile number must be exactly 10 digits.')])),
                ('picture', models.ImageField(default=None, null=True, upload_to='trainer_profiles/', verbose_name='Profile Picture')),
                ('status', models.BooleanField(default=True, verbose_name='Active Status')),
                ('awards', models.ManyToManyField(blank=True, to='trainers.award', verbose_name='Trainer Awards')),
                ('organizations', models.ManyToManyField(to='trainers.organization', verbose_name='IT Experience')),
                ('qualifications', models.ManyToManyField(to='trainers.qualification', verbose_name='Qualifications')),
            ],
        ),
    ]
